{"version":3,"sources":["Components/Filter/FilterData.jsx","App.js","reportWebVitals.js","index.js","Components/Filter/FilterData.module.css"],"names":["FilterData","React","memo","useState","data","setData","filteredData","setFilteredData","inputData","setInputData","checkboxValue","setCheckboxValue","textInput","useEffect","fetch","then","response","json","catch","error","console","className","style","container","h1","containerValue","inpChe","id","type","input","placeholder","onChange","event","inputValue","target","value","toLowerCase","toUpperCase","sortData","button","onClick","length","Number","isNaN","result","filter","word","regExpUpperCase","RegExp","resultUpperCase","item","test","alert","regExp","searchResult","listData","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a8ead0b6.chunk.js","sourcesContent":["import style from \"./FilterData.module.css\"\r\nimport {useEffect, useState} from \"react\";\r\nimport React from \"react\"\r\n\r\nconst FilterData = React.memo(() => {\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [inputData, setInputData] = useState('');\r\n    const [checkboxValue, setCheckboxValue] = useState('i');\r\n\r\n    let textInput = inputData ? 'Данные введены' : '';\r\n\r\n    const url = 'http://www.mrsoft.by/data.json';\r\n    const corsUrl = 'https://cors-anywhere.herokuapp.com';\r\n\r\n    const inputDataValue = (event) => {\r\n        const inputValue = event.target.value;\r\n\r\n        setInputData(inputValue);\r\n        checkboxValue === 'i' ? setInputData(inputValue.toLowerCase()) : setInputData(inputValue.toUpperCase());\r\n    };\r\n\r\n    const toggleButtonWordLength = () => {\r\n\r\n        if (inputData.length >= 1 && !Number.isNaN(inputData)) {\r\n            const result = data.filter(word => word.length > inputData);\r\n\r\n            if (checkboxValue === '') {\r\n                const regExpUpperCase = new RegExp(/([A-Z])\\w+/g);\r\n                const resultUpperCase = result.filter(item => regExpUpperCase.test(item));\r\n\r\n                setFilteredData(resultUpperCase);\r\n\r\n            } else if ((checkboxValue === 'i')) {\r\n                setFilteredData(result);\r\n            }\r\n        } else {\r\n            if (!inputData.length || Number.isNaN(inputData)) {\r\n                alert('Введите число');\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleButtonSubstring = () => {\r\n        if (inputData.length >= 1 && isNaN(inputData)) {\r\n            const regExp = new RegExp(inputData, `${checkboxValue}`);\r\n            const searchResult = data.filter(word => regExp.test(word));\r\n\r\n            setFilteredData(searchResult);\r\n        } else {\r\n            if (!isNaN(inputData)) {\r\n                alert('Введите буквы');\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleCheckbox = () => {\r\n        checkboxValue === 'i' ? setCheckboxValue('') : setCheckboxValue('i');\r\n        checkboxValue === '' ? setInputData(inputData.toLowerCase()) : setInputData(inputData.toUpperCase());\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`${corsUrl}/${url}`)\r\n            .then(response => response.json())\r\n            .then(\r\n                (data) => {\r\n                    setData(data.data);\r\n                })\r\n            .catch(error => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    }, [\r\n        inputData, checkboxValue\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.container}>\r\n                <h1 className={style.h1}>Тестовое задание</h1>\r\n                <div className={style.containerValue}>\r\n                    <div className={style.inpChe}>\r\n                        <h4>Ввод данных</h4>\r\n                        <label>\r\n                            <input id=\"text-data\" type=\"text\" className={style.input}\r\n                                   placeholder=\"Введите слово или число\"\r\n                                   onChange={inputDataValue} value={inputData}\r\n                            />\r\n                            <span>{textInput}</span>\r\n                            <div>\r\n                                <input type=\"checkbox\"\r\n                                       onChange={toggleCheckbox}\r\n                                />\r\n                                <span>чувствительность регистра</span>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className={style.sortData}>\r\n                        <div>\r\n                            <div>Сортировка данных</div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className={style.button}\r\n                                onClick={toggleButtonWordLength}\r\n                            >По длине слов\r\n                            </button>\r\n                            <button className={style.button}\r\n                                    onClick={toggleButtonSubstring}\r\n                            >По подстроке\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {filteredData.length > 0 &&\r\n            <div>\r\n                <h4>Результат:</h4>\r\n\r\n                <div className={style.listData}>\r\n                    <ol>\r\n                        {filteredData.map((item) =>\r\n                            <li key={item} className=\"flow-text\">{item}</li>\r\n                        )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default FilterData;","import './App.css';\r\nimport FilterData from \"./Components/Filter/FilterData\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <FilterData/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterData_container__A-G8y\",\"containerValue\":\"FilterData_containerValue__3sYE6\",\"h1\":\"FilterData_h1__w4_ny\",\"inpChe\":\"FilterData_inpChe__ZvCa6\",\"input\":\"FilterData_input__2gDkN\",\"sortData\":\"FilterData_sortData__2mCTU\",\"button\":\"FilterData_button__2oQoY\",\"blink\":\"FilterData_blink__1_O-f\"};"],"sourceRoot":""}